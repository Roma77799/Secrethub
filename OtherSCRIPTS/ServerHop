local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local HttpService = game:GetService("HttpService")

-- –ß—Ç–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
local success, result = pcall(function()
    return HttpService:JSONDecode(readfile("NotSameServers.json"))
end)

if success and type(result) == "table" then
    AllIDs = result
else
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
end

function TPReturner()
    local Site
    if foundAnything == "" then
        Site = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"))
    else
        Site = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. foundAnything))
    end

    if Site.nextPageCursor and Site.nextPageCursor ~= "null" then
        foundAnything = Site.nextPageCursor
    end

    local num = 0
    for _, v in pairs(Site.data) do
        local ID = tostring(v.id)
        local Possible = true

        -- üîπ –£—Å–ª–æ–≤–∏–µ: –º–µ–Ω—å—à–µ 10 –∏–≥—Ä–æ–∫–æ–≤ –∏ –Ω–µ –ø–æ–ª–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
        if tonumber(v.playing) < 10 and tonumber(v.playing) < tonumber(v.maxPlayers) then
            for _, Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                        break
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local _ = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {actualHour}
                        end)
                    end
                end
                num = num + 1
            end

            if Possible then
                table.insert(AllIDs, ID)
                pcall(function()
                    writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
                    task.wait(1)
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                task.wait(4)
            end
        end
    end
end

function Teleport()
    while task.wait(1) do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- üöÄ –ó–∞–ø—É—Å–∫
Teleport()
